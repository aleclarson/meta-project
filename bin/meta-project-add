#!/usr/bin/env node

const find = require('find-file-recursively-up');
const exec = require('meta-exec');
const mkdirp = require('mkdirp');

const addToGitIgnore = require('../lib/addToGitIgnore');
const addToMetaFile = require('../lib/addToMetaFile');

const { argv } = process;

const usage = `\n  usage:\n\n    meta project add <destFolder> <childRepoUrl>\n`;
if (!argv[2] || argv[2] === '--help') return console.log(usage);

const destFolder = argv[2] === 'blank' ? argv[3] : argv[2];
const repoUrl = argv[3] === 'blank' ? argv[4] : argv[3];

if (!destFolder || !repoUrl) return console.log(usage);

console.log(`meta project adding \'${repoUrl}\' at ${destFolder}`);

mkdirp.sync(destFolder);
process.chdir(destFolder);
console.log(`created ${process.cwd()}`);

// meta project add <folder> <repo>
exec(
  {
    command: 'git init',
    suppressLogging: true,
  },
  err => {
    if (err) throw err;

    exec(
      {
        command: `git remote add origin ${repoUrl}`,
        suppressLogging: true,
      },
      err => {
        if (err) throw err;

        console.log(`set remote origin to ${repoUrl}`);

        find('.meta', (err, metafilePath) => {
          if (err) throw err;

          addToMetaFile(metafilePath, destFolder, repoUrl);

          addToGitIgnore(
            metafilePath.replace(/.meta$/, '.gitignore'),
            destFolder
          );
        });
      }
    );
  }
);
